#!/usr/bin/env python
import sys
import optparse
from collections import defaultdict

#Define the command line arguments
optparser = optparse.OptionParser()
optparser.add_option("-d","--data",dest="data",default="data/corpora",help="Training the system [default corpora = (data/corpora) ]")
optparser.add_option("-t","--threshold",dest="threshold",default=0.5,type="float",help="Threshold value fo dice coefficient (default = 0.5) ")
optparser.add_option("-f","--french",dest="source",default="f",help="Suffix for source data (default = en )")
optparser.add_option("-e","--english",dest="target",default="e" ,help="Suffix for french data (default =  fr) ")
optparser.add_option("-n","--number",dest="num",default=sys.maxint,type="int",help="Number of sentences (default = 100 )")

#Take the arguments from the user
(options,_)=optparser.parse_args()

#define the target suffix anf source suffix
target_data = "%s.%s" %(options.data,options.target)
source_data = "%s.%s" %(options.data,options.source)

sys.stderr.write("Training with dice coefficient")

#get data
bilingual_data = [[sentence.strip().split() for sentence in pair] for pair in zip(open(source_data),open(target_data))[:options.num]]

#intialize the counter
s_count = defaultdict(int)
t_count = defaultdict(int)
st_count = defaultdict(int)

# Assume each word to count 1 and the (source,target) = 1
for (n,(s,t)) in enumerate(bilingual_data):
    for s_w in set(s):
        s_count[s_w] += 1
        for t_w in set(t):
            st_count[(s_w,t_w)] += 1
    for t_w in set(t):
        t_count[t_w] += 1
    if n % 500 == 0:
        sys.stderr.write(".")

dice = defaultdict(int)
# calculate the dice's coefficient
for (n,(s,t)) in enumerate(st_count.keys()):
    dice[(s,t)] = 2.0 * st_count[(s,t)] / (s_count[s] + t_count[t])
    if n % 5000 == 0:
        sys.stderr.write(".")
#very important###### Responsilble for splitting the line 
sys.stderr.write("\n")

#alignment
for (s,t) in bilingual_data:
  for (i,s_w) in enumerate(s):
    for (j,t_w) in enumerate(t):
      if dice[(s_w,t_w)] >= options.threshold:
        sys.stdout.write("%i-%i " % (i,j))
  sys.stdout.write("\n")
